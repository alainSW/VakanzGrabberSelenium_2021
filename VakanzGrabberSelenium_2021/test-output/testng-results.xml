<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="3" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-02-02T13:27:53 CET" name="Suite" finished-at="2021-02-02T13:29:29 CET" duration-ms="96293">
    <groups>
    </groups>
    <test started-at="2021-02-02T13:27:53 CET" name="Test" finished-at="2021-02-02T13:29:29 CET" duration-ms="96293">
      <class name="de.alain.FreelancerDe.testCase.TestCases">
        <test-method is-config="true" signature="setUpFramework()[pri:0, instance:de.alain.FreelancerDe.testCase.TestCases@2e1ef60]" started-at="2021-02-02T13:27:53 CET" name="setUpFramework" finished-at="2021-02-02T13:27:53 CET" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpFramework -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:de.alain.FreelancerDe.testCase.TestCases@2e1ef60]" started-at="2021-02-02T13:27:53 CET" name="beforeMethod" finished-at="2021-02-02T13:28:00 CET" duration-ms="6454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="prozessLogikAbwicklung(java.util.Hashtable, java.lang.reflect.Method)[pri:0, instance:de.alain.FreelancerDe.testCase.TestCases@2e1ef60]" started-at="2021-02-02T13:28:00 CET" name="prozessLogikAbwicklung" data-provider="data" finished-at="2021-02-02T13:28:44 CET" duration-ms="44547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{suchebegriff=msg}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void de.alain.FreelancerDe.testCase.TestCases.prozessLogikAbwicklung(java.util.Hashtable,java.lang.reflect.Method) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prozessLogikAbwicklung -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:de.alain.FreelancerDe.testCase.TestCases@2e1ef60]" started-at="2021-02-02T13:28:44 CET" name="beforeMethod" finished-at="2021-02-02T13:28:44 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="prozessLogikAbwicklung(java.util.Hashtable, java.lang.reflect.Method)[pri:0, instance:de.alain.FreelancerDe.testCase.TestCases@2e1ef60]" started-at="2021-02-02T13:28:44 CET" name="prozessLogikAbwicklung" data-provider="data" finished-at="2021-02-02T13:29:17 CET" duration-ms="32282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{suchebegriff=Testautomatisierer}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void de.alain.FreelancerDe.testCase.TestCases.prozessLogikAbwicklung(java.util.Hashtable,java.lang.reflect.Method) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prozessLogikAbwicklung -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:de.alain.FreelancerDe.testCase.TestCases@2e1ef60]" started-at="2021-02-02T13:29:17 CET" name="beforeMethod" finished-at="2021-02-02T13:29:17 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="prozessLogikAbwicklung(java.util.Hashtable, java.lang.reflect.Method)[pri:0, instance:de.alain.FreelancerDe.testCase.TestCases@2e1ef60]" started-at="2021-02-02T13:29:17 CET" name="prozessLogikAbwicklung" data-provider="data" finished-at="2021-02-02T13:29:26 CET" duration-ms="9932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{suchebegriff=Testkoordinator}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void de.alain.FreelancerDe.testCase.TestCases.prozessLogikAbwicklung(java.util.Hashtable,java.lang.reflect.Method) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prozessLogikAbwicklung -->
        <test-method is-config="true" signature="EndTest()[pri:0, instance:de.alain.FreelancerDe.testCase.TestCases@2e1ef60]" started-at="2021-02-02T13:29:26 CET" name="EndTest" finished-at="2021-02-02T13:29:29 CET" duration-ms="3008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTest -->
      </class> <!-- de.alain.FreelancerDe.testCase.TestCases -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
